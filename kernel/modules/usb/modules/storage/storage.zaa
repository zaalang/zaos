//
// mass storage device
//

import std.stdio;
import std.atomic;
import std.box;
import dev;
import blk;
import usb;
import usb.usbdev;
import usb.modules.storage.bot as bot;
import usb.modules.storage.uas as uas;
import support.rc : Rc;

pub fn initialise(usb::usbdev mut *device, std::span<u8> descriptors) -> usb::result
{
  var interface = cast<usb::interface_descriptor*>(descriptors.data);

  switch (interface.interface_protocol)
  {
    case 0x50:
      bot::initialise(device, descriptors);

    case 0x62:
      uas::initialise(device, descriptors);

    else:
      std::print("usb-storage: unsupported interface protocol ", interface.interface_protocol);
  }

  return ok;
}
