//
// close
//

import std.stdlib;
import ioring : ioring_ctx;
import vfs;
import process as _ : process;
import result as _ : result;

pub fn sys_close(process mut *process, ioring_ctx mut &ctx, i32 fd) -> result
{
  var file = process.fd(fd);

  if (!file)
    return vfs::result::bad_descriptor;

  if (file.parent)
    vfs::notify(file.parent, file.node, vfs::notify::close_write);

  process.free_fd(fd);

  return 0;
}
