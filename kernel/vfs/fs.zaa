//
// fs
//

import std.stdio;
import std.string;
import vfs.node;
import support.rc : Rc;

pub struct file_system
{
  pub file_system_operations &ops;

  pub file_system(file_system_operations &ops)
    : ops(&ops)
  {
  }

  pub ~file_system() = default;
}

pub struct file_system_context
{
  pub Rc<vfs::node> source;

  pub file_system_context() = default;
  pub ~file_system_context() = default;
}

pub vtable file_system_type
{
  pub fn name() -> std::string_view;
  pub fn create(file_system_context &ctx) -> file_system mut *;
}

pub vtable file_system_operations
{
  pub fn mount(this mut *fs, Rc<vfs::node> mut &dentry) -> vfs::result;
}
