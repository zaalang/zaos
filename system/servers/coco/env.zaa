//
// env
//

import std.stdio;
import os.zaos.fcntl;

pub struct env
{
  pub std::string username;
  pub std::string working_directory;

  pub env() = default;
  pub ~env() = default;
}

extern fn thread_ring() -> os::ioring mut &;

pub fn create() -> env
{
  return env();
}

pub fn login(env mut &env, u8[128] &username, u8[128] &password) -> i32
{
  using os;

  if (std::span(username.data, 5) != "root\n")
    return -1;

  env.username = std::span(username.data, 4);
  env.working_directory = "/zaos/root";

  var cwd = open(&mut thread_ring, os::string(env.working_directory.data, env.working_directory.len), O_RDONLY, 0);

  if (cwd < 0)
    return cwd;

  if (var rc = dup2(&mut thread_ring, cwd, STDCWD_FILENO); rc < 0)
  {
    close(&mut thread_ring, cwd);

    return rc;
  }

  close(&mut thread_ring, cwd);

  return 0;
}
