//
// run
//

import std.stdlib;
import sys.process;
import sys.path;
import sys.fs;
import engine;
import pipeline;
import value;

using value;
using engine;
using pipeline;

pub fn run(Context &&ctx, Pipeline mut &pipeline, std::string &name) throws -> void
{
  var path = name;

  if (!path.contains(sys::sep_byte))
  {
    path = "";

    for (var &part : [ "/zaos/bin" ])
    {
      try
      {
        for (var &file : sys::read_dir(part))
        {
          if (file.is_dir)
            continue;

          if (file.name == name)
          {
            path = file.path;

            break;
          }
        }
      }
      catch (std::error e)
      {
      }
    }

    if (path.empty)
      throw std::system_error(std::errc::not_found);
  }

  if (path.starts_with("."))
  {
    path = sys::cwd + "/" + path;
  }

  var cmd = sys::command(path);

  pipeline.append(&mut cmd);
}
