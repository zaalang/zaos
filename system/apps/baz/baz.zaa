//
// baz
//

import std.stdio;
import std.string : String;
import app.loop;
import winton;
import mmap;
import opentype;
import gfx.blit;
import gfx.text;

struct test : pub winton::window
{
  mmap::file font_data;
  opentype::face font_face;

  pub fn create(winton::display &&display, winton::window::flags flags) throws -> test
  {
    return test(winton::window::create(display, flags, winton::iwindow()));
  }

  pub fn set_font(this mut &, String &path) throws -> void
  {
    this.font_data = mmap::file::open(path);
    this.font_face = opentype::face::parse(this.font_data);

    if (this.font_face.error)
      std::print("Error loading font - ", this.font_face.error);
  }

  pub fn button_event(this mut &, winton::input &input) override -> void
  {
    std::print(input);
  }

  pub fn key_event(this mut &, winton::input &input) override -> void
  {
    std::print(input);

    if (input.last_key == 122 && input.key_state[cast(input.last_key)] == 0)
      this.set_fullscreen(!this.is_fullscreen);
  }

  pub fn paint_event(this mut &, winton::buffer mut &buffer) override -> void
  {
    var rect = this.interior;

    var painter = gfx::create_context(buffer.width, buffer.height, cast(buffer.stride), buffer.data);

    painter.fill_rect(rect.x, rect.y, rect.width, rect.height, gfx::color(1.0, 1.0, 1.0));

    var x = 10.0;
    var y = 60.0;
    var h = 0.032;

    for(var i = 1; i < 16; ++i)
    {
      var s = std::floor(1000.0 * h) / 1000.0;

      painter.draw_text(gfx::transform::translation(x, y) * gfx::transform::scale(s, s), this.font_face, "The quick brown fox jumps over the lazy dog", gfx::color(0.0, 0.0, 0.0));

      y += 1125.0 * h;
      h *= 0.96*0.96;
    }
  }

  pub fn close_event(this mut &) override -> void
  {
    this.destroy();
  }

  test(winton::window &&window)
    : super(&move window)
  {
  }

  ~test() = default;
}

fn main() -> int
{
  var loop = app::loop();

  if (var rc = app::initialise(&mut loop); rc < 0)
    std::panic("baz unable to init loop - ", cast<std::errc>(-rc));

  try
  {
    var display = winton::display::create();

    var window = test::create(display, winton::window::flags::close_button | winton::window::flags::minimise_button | winton::window::flags::maximise_button);

    window.set_font("/zaos/data/NotoSans-Regular.ttf");

    window.schedule_resize(800, 400);

    loop.run();
  }
  catch(std::error e)
  {
    std::print("baz error - ", e);
  }

  return 0;
}
