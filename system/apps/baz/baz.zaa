//
// baz
//

import std.stdio;
import std.string : String;
import os.zaos.mman;
import os.zaos.fcntl;
import os.zaos.sched;

fn main() -> int
{
  std::print("baz");

  for(;;)
    std::printf(".");

  var buf = [u8(0); 64];
  var len = std::stdin.read(buf.data, buf.len);
  std::print(len);
  std::print(std::string_view(buf.data, len));

/*
  var ring = os::ioring();

  var mmvec = os::mmvec();
  mmvec.offset = 0;
  mmvec.length = 1024*1024;
  mmvec.flags = os::mmap::anonymous;
  mmvec.prot = os::prot::readwrite;

  if (var rc = os::mmap(-1, &mmvec, 1, &ring.header, 0); rc < 0)
    std::panic("mmap: ", rc);

  if (ring.fd = os::ioring_setup(ring.header, mmvec.length, 0); ring.fd < 0)
    std::panic("setup: ", ring.fd);

  std::print(ring);

  var stat = os::stat();
  var buffer = [<u8>: void; 2048];

  for (var i = 0; i < 1000000; ++i)
  {
    std::print(i);

    var fd = os::open(&mut ring, os::STDROOT_FILENO, os::string("/zaos/root/test.txt"), 1, 0);
    if (fd < 0)
      std::panic("open: ", fd);

    var sqe1 = os::ioring_get_sqe(&mut ring);
    os::ioring_prep_sqe_stat(sqe1, fd, &stat, 0);
    os::ioring_advance_sqe(&mut ring);

    var sqe2 = os::ioring_get_sqe(&mut ring);
    os::ioring_prep_sqe_read(sqe2, fd, buffer.data, buffer.len);
    sqe2.flags = 0;
    os::ioring_advance_sqe(&mut ring);

    var sqe3 = os::ioring_get_sqe(&mut ring);
    os::ioring_prep_sqe_read(sqe3, fd, buffer.data, buffer.len);
    os::ioring_advance_sqe(&mut ring);

    if (var rc = os::ioring_enter(ring.fd, 3, 3, 0); rc < 0)
      std::panic("sqe1: ", rc);

    for (var k = 0; k < 3; ++k)
    {
      var cqe = os::ioring_get_cqe(&mut ring);
      std::print(*cqe);
      os::ioring_advance_cqe(&mut ring);
    }

    std::print(stat);
    std::print(std::string_view(buffer.data, 30));

    os::close(&mut ring, fd);
  }
*/
  std::print("done");

  return 0;
}
